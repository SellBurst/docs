{
  "openapi": "3.0.1",
  "info": {
    "title": "Sellburst API",
    "description": "Sellburst API for merchants",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.sellburst.io/v1"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/orders/{uuid}": {
      "get": {
        "description": "Get a specific order data",
        "parameters": [
          {
            "$ref": "#/components/parameters/merchant"
          },
          {
            "in": "path",
            "name": "uuid",
            "description": "Unique ID of the order",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "6e9ce865-b27d-4ded-9883-0389ea114ca9"
          }
        ],
        "responses": {
          "200": {
            "description": "Order data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customer": {
                      "type": "integer",
                      "example": 1
                    },
                    "gateway": {
                      "type": "string",
                      "example": "stripe"
                    },
                    "status": {
                      "type": "string",
                      "example": "pending"
                    },
                    "paid_at": {
                      "type": "string",
                      "example": null
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2024-01-01T00:00:00"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/orders": {
      "get": {
        "description": "Get all orders",
        "parameters": [
          {
            "$ref": "#/components/parameters/merchant"
          },
          {
            "in": "query",
            "name": "Status",
            "description": "Possible values: `pending`, `partial`, `completed`, `expired`, `sold_out`, `confirmation`, `chargeback`, `refunded`, `disputed`, `cancelled`",
            "schema": {
              "type": "string"
            },
            "example": "completed"
          },
          {
            "in": "query",
            "name": "Gateway",
            "description": "Possible values: `stripe`, `paypal`, `square`, `hoodpay`, `mercado_pago`, `paypal_fnf`, `coinremitter`, `oxapay`",
            "schema": {
              "type": "string"
            },
            "example": "stripe"
          },
          {
            "in": "query",
            "name": "SortBy",
            "description": "Possible values: `paid_at`, `created_at`",
            "schema": {
              "type": "string"
            },
            "example": "created_at"
          },
          {
            "in": "query",
            "name": "IsDescending",
            "description": "Possible values: `true`, `false`",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "in": "query",
            "name": "Page",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "in": "query",
            "name": "PageSize",
            "description": "Possible range values: `1-100`",
            "schema": {
              "type": "integer"
            },
            "example": 20
          }
        ],
        "responses": {
          "200": {
            "description": "Orders data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "example": "6e9ce865-b27d-4ded-9883-0389ea114ca9"
                      },
                      "customer": {
                        "type": "integer",
                        "example": 1
                      },
                      "gateway": {
                        "type": "string",
                        "example": "stripe"
                      },
                      "status": {
                        "type": "string",
                        "example": "pending"
                      },
                      "paid_at": {
                        "type": "string",
                        "example": null
                      },
                      "created_at": {
                        "type": "string",
                        "example": "2024-01-01T00:00:00"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "description": "Create an order",
        "parameters": [
          {
            "$ref": "#/components/parameters/merchant"
          }
        ],
        "requestBody": {
          "description": "JSON object to create an order",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "gateway",
                  "cart"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "gateway": {
                    "type": "string",
                    "example": "stripe",
                    "description": "Possible values: `stripe`, `paypal`, `square`, `hoodpay`, `mercado_pago`, `paypal_fnf`, `coinremitter`, `oxapay`"
                  },
                  "subgateway": {
                    "type": "string",
                    "example": "coinremitter_bitcoin",
                    "description": "Only available in `coinremitter` gateway, possible values: `coinremitter_litecoin`, `coinremitter_bitcoin`"
                  },
                  "allow_private": {
                    "type": "boolean",
                    "example": true,
                    "description": "Whether to allow private products in the cart"
                  },
                  "notification_url": {
                    "type": "string",
                    "example": "https://example.com/notification",
                    "description": "URL to receive notifications (must be https and **POST** method)"
                  },
                  "cart": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "product",
                        "quantity"
                      ],
                      "properties": {
                        "productId": {
                          "type": "integer",
                          "example": 1
                        },
                        "variant": {
                          "type": "string",
                          "example": "Default"
                        },
                        "quantity": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Orders data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "uuid",
                    "status"
                  ],
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "example": "6e9ce865-b27d-4ded-9883-0389ea114ca9"
                    },
                    "status": {
                      "type": "string",
                      "example": "pending"
                    },
                    "url": {
                      "type": "string",
                      "example": "https://example.com/6e9ce865-b27d-4ded-9883-0389ea114ca9"
                    },
                    "tracking_id": {
                      "type": "string",
                      "example": "mp_18297389123",
                      "description": "Only available in `mercado_pago` gateway"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/tax-report": {
      "get": {
        "description": "Get a tax report",
        "parameters": [
          {
            "$ref": "#/components/parameters/merchant"
          },
          {
            "in": "query",
            "name": "StartDate",
            "description": "Timestamp of when the report starts",
            "schema": {
              "type": "string"
            },
            "required": false,
            "example": "2024-01-01T00:00:00"
          },
          {
            "in": "query",
            "name": "EndDate",
            "description": "Timestamp of when the report ends",
            "schema": {
              "type": "string"
            },
            "required": false,
            "example": "2024-01-31T23:59:59"
          },
          {
            "in": "query",
            "name": "Gateways",
            "description": "Possible values: `stripe`, `paypal`, `square`, `hoodpay`, `mercado_pago`, `paypal_fnf`, `coinremitter`, `oxapay`",
            "schema": {
              "type": "array"
            },
            "required": false,
            "example": "[\"stripe\"]"
          }
        ],
        "responses": {
          "200": {
            "description": "Order data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "products": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "name": {
                              "type": "string",
                              "example": "Product 1"
                            },
                            "variant": {
                              "type": "string",
                              "example": "Week"
                            },
                            "price": {
                              "type": "number",
                              "example": 10
                            }
                          }
                        }
                      },
                      "gateway": {
                        "type": "string",
                        "example": "stripe"
                      },
                      "order_uuid": {
                        "type": "string",
                        "example": "03850cee-ef04-43f8-8434-fb59d3ab2218"
                      },
                      "customer_email": {
                        "type": "string",
                        "example": "user@example.com"
                      },
                      "customer_country": {
                        "type": "string",
                        "example": "US"
                      },
                      "sub_total": {
                        "type": "number",
                        "example": 10
                      },
                      "paid_at": {
                        "type": "string",
                        "example": "2024-04-21T14:38:05"
                      },
                      "created_at": {
                        "type": "string",
                        "example": "2024-04-21T15:27:08"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Plant": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the plant",
            "type": "string"
          },
          "tag": {
            "description": "Tag to specify the type",
            "type": "string"
          }
        }
      },
      "NewPlant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Plant"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "description": "Identification number of the plant",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "parameters": {
      "merchant": {
        "name": "X-Merchant",
        "in": "header",
        "description": "The Store Name you want to select",
        "schema": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized",
        "content": {}
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}